#!/usr/bin/env python3
"""
Style Command Test - Test different response styles for the voice chatbot
"""

def test_style_commands():
    """Test script to show available style commands"""
    
    print("üé≠ Voice Assistant Style Commands")
    print("=" * 50)
    print("\nAvailable style commands you can say:")
    print()
    
    commands = [
        ("speak more formally", "‚Üí Professional language with detailed explanations"),
        ("be more casual", "‚Üí Informal, conversational tone"),
        ("be more technical", "‚Üí Technical details and terminology"),
        ("explain like I'm 5", "‚Üí Simple language for easy understanding"),
        ("be more concise", "‚Üí Brief, to-the-point responses"),
        ("be more detailed", "‚Üí Comprehensive explanations with examples"),
        ("be more creative", "‚Üí Creative language with metaphors"),
        ("be more professional", "‚Üí Business-appropriate language"),
        ("reset style", "‚Üí Return to default conversational tone")
    ]
    
    for command, description in commands:
        print(f"  '{command}' {description}")
    
    print("\nüìù Example conversation flow:")
    print("  You: 'What is machine learning?'")
    print("  Assistant: [Gives normal explanation]")
    print()
    print("  You: 'explain like I'm 5'") 
    print("  Assistant: 'I've updated my response style.'")
    print()
    print("  You: 'What is machine learning?'")
    print("  Assistant: [Gives child-friendly explanation]")
    print()
    print("  You: 'be more technical'")
    print("  Assistant: 'I've updated my response style.'") 
    print()
    print("  You: 'What is machine learning?'")
    print("  Assistant: [Gives technical explanation with algorithms, etc.]")
    
    print("\nüöÄ Enhanced System Prompt Features:")
    print("  ‚Ä¢ Dynamic style switching during conversation")
    print("  ‚Ä¢ Immediate confirmation of style changes")
    print("  ‚Ä¢ Persistent style until changed or reset")
    print("  ‚Ä¢ Voice-optimized responses (no formatting lists)")
    print("  ‚Ä¢ Special commands are processed locally for speed")
    
    print("\nüí° Tips:")
    print("  ‚Ä¢ Style changes persist throughout the conversation")
    print("  ‚Ä¢ You can chain multiple questions in the same style")
    print("  ‚Ä¢ Say 'reset style' to return to normal")
    print("  ‚Ä¢ The AI will adapt its vocabulary and explanation depth")

if __name__ == "__main__":
    test_style_commands()
